# Generated by Django 4.0.4 on 2022-12-16 02:18

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('id', models.AutoField(auto_created=True, db_index=True, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('name', models.CharField(db_index=True, help_text='Nombre del hotel', max_length=150, verbose_name='Nombre')),
                ('address', models.CharField(blank=True, db_index=True, help_text='Dirección del hotel (opcional)', max_length=250, null=True, verbose_name='Dirección')),
            ],
        ),
        migrations.CreateModel(
            name='PickUp',
            fields=[
                ('id', models.AutoField(auto_created=True, db_index=True, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('hotel_id', models.ForeignKey(help_text='Hotel al que pertenece el tour en el horario seleccionado', on_delete=django.db.models.deletion.CASCADE, to='store.hotel', verbose_name='Hotel')),
            ],
        ),
        migrations.CreateModel(
            name='Tour',
            fields=[
                ('id', models.AutoField(auto_created=True, db_index=True, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('name', models.CharField(db_index=True, help_text='Nombre del tour', max_length=150, verbose_name='Nombre')),
                ('adults_price', models.DecimalField(decimal_places=2, help_text='Precio de cada adulto en el tour', max_digits=10, verbose_name='Precio Adultos')),
                ('childs_price', models.DecimalField(blank=True, decimal_places=2, help_text='Precio de cada niño en el tour', max_digits=10, null=True, verbose_name='Precio Niños')),
                ('min_people', models.IntegerField(default=1, help_text='Minimo de personas para realizar el tour', verbose_name='Minimo de personas')),
                ('is_active', models.BooleanField(default=True, help_text='Si el tour esta activo o no', verbose_name='Activo')),
                ('date_start', models.DateField(default=datetime.datetime(2022, 12, 15, 20, 18, 9, 642740), help_text='Fecha de inicio del tour', verbose_name='Fecha de inicio')),
                ('date_end', models.DateField(default=datetime.datetime(2022, 12, 15, 20, 18, 9, 642740), help_text='Fecha de fin del tour', verbose_name='Fecha de fin')),
                ('monday', models.BooleanField(default=True, help_text='Si el tour se realiza los lunes', verbose_name='Lunes')),
                ('tuesday', models.BooleanField(default=True, help_text='Si el tour se realiza los martes', verbose_name='Martes')),
                ('wednesday', models.BooleanField(default=True, help_text='Si el tour se realiza los miercoles', verbose_name='Miercoles')),
                ('thursday', models.BooleanField(default=True, help_text='Si el tour se realiza los jueves', verbose_name='Jueves')),
                ('friday', models.BooleanField(default=True, help_text='Si el tour se realiza los viernes', verbose_name='Viernes')),
                ('saturnday', models.BooleanField(default=True, help_text='Si el tour se realiza los sabados', verbose_name='Sabado')),
                ('sunday', models.BooleanField(default=True, help_text='Si el tour se realiza los domingos', verbose_name='Domingo')),
            ],
        ),
        migrations.CreateModel(
            name='TourTime',
            fields=[
                ('id', models.AutoField(auto_created=True, db_index=True, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('time_start', models.TimeField(default=datetime.datetime(2022, 12, 15, 20, 18, 9, 764736), help_text='Hora de inicio del tour', verbose_name='Hora de inicio')),
                ('duration', models.IntegerField(default=1, help_text='Duración del tour en horas', verbose_name='Duración')),
                ('tour_id', models.ForeignKey(help_text='Tour al que pertenece el horario', on_delete=django.db.models.deletion.CASCADE, to='store.tour', verbose_name='Tour')),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.AutoField(auto_created=True, db_index=True, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('first_name', models.CharField(db_index=True, help_text='Nombre del cliente', max_length=150, verbose_name='Nombre')),
                ('last_name', models.CharField(db_index=True, help_text='Apellido del cliente', max_length=150, verbose_name='Apellido')),
                ('email', models.EmailField(db_index=True, help_text='Email del cliente', max_length=150, verbose_name='Email')),
                ('adults_num', models.IntegerField(default=1, help_text='Numero de adultos', verbose_name='Adultos')),
                ('childs_num', models.IntegerField(default=0, help_text='Numero de niños', verbose_name='Niños')),
                ('total', models.DecimalField(decimal_places=2, help_text='Total de la venta', max_digits=10, verbose_name='Total')),
                ('is_paid', models.BooleanField(default=False, help_text='Si el tour esta pagado o no', verbose_name='Pagado')),
                ('date', models.DateTimeField(default=datetime.datetime(2022, 12, 15, 20, 18, 9, 766736), help_text='Fecha del tour', verbose_name='Fecha')),
                ('id_pick_up', models.ForeignKey(help_text='Tour seleccionado con horario, hotel y pick up', on_delete=django.db.models.deletion.CASCADE, to='store.pickup', verbose_name='Tour Pick Up')),
            ],
        ),
        migrations.AddField(
            model_name='pickup',
            name='tour_time_id',
            field=models.ForeignKey(help_text='Tour seleccionado con horario', on_delete=django.db.models.deletion.CASCADE, to='store.tourtime', verbose_name='Tour Horario'),
        ),
    ]
